(* Sugeno Inference *)
FUNCTION_BLOCK orc
    VAR_INPUT
        (* The amount of hours the Orc has trained for. *)
        trainingLevel : REAL;
        (* The attack value of the opponent/player. *)
        attack : REAL;
    END_VAR

    VAR_OUTPUT
        (* This is the attack response of the Orc. *)
        attackResponse : REAL;
    END_VAR

    (* The training level of the Orc is determined *)
    (* using the amount of hours the Orc has trained. *)
    FUZZIFY trainingLevel
        TERM novice := (0, 0) (50, 1) (750, 0);
        TERM intermediate := (500, 0) (1000, 1) (5000, 0);
        TERM expert := (1250, 0) (10000, 1);
    END_FUZZIFY

    (* The attack comes in 4 tiers *)
    (* Weak covering 0 - 40 *)
    (* Medium covering 40 - 60 *)
    FUZZIFY attack
        TERM weak := trian -5 12.5 30;
        TERM medium := trian 20 37.5 55;
        TERM strong := trian 45 62.5 80;
        TERM powerful := trian 70 87.5 105;
    END_FUZZIFY

    (* Similar to the attack above, but using singleton membership functions *)
    DEFUZZIFY attackResponse
        TERM weak := 20;
        TERM medium := 40;
        TERM strong := 60;
        TERM powerful := 80;

        (* COGS is COG but for Singleton functions. *)
        METHOD : COGS;

        (* Using 50 as the default, because it is 100 / 2. *)
        DEFAULT := 50;
    END_DEFUZZIFY

    RULEBLOCK No1
        AND : MIN;
        ACT : MIN;
        ACCU : MAX;
        OR : MAX;

        (* If the Orc is a novice, then all their attacks will be weak, *)
        (* no matter the attack of the player. *)
        RULE 1 : IF trainingLevel IS novice THEN attackResponse IS weak;

        (* If the player's attack is weak and Orc is an expert, *)
        (* Use a medium response attack. *)
        RULE 2 : IF trainingLevel IS expert AND attack IS weak
        THEN attackResponse IS medium;

        (* If the Orc is of intermediate level, send back a medium level of attack. *)
        RULE 3 : IF trainingLevel IS intermediate THEN attackResponse IS medium;

        (* If the Orc is an expert and the players attack powerful, respond with powerful. *)
        RULE 4: IF trainingLevel IS expert AND attack IS powerful
        THEN attackResponse IS powerful;

        (* If the Orc is an expert and the attack isn't weak or powerful, then return medium attack *)
        RULE 5 : IF trainingLevel IS expert AND attack IS NOT weak AND attack IS NOT powerful THEN
        attackResponse IS medium;
    END_RULEBLOCK
END_FUNCTION_BLOCK
